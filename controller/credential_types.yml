controller_credential_types:
  - name: Dynatrace Credential
    description: Dynatrace credential for use with Dynatrace API
    inputs:
      fields:
        - id: dynatrace_host
          type: string
          label: Dynatrace Host
        - id: dynatrace_client_id
          type: string
          label: Dynatrace Client Id
        - id: dynatrace_client_secret
          type: string
          label: Dynatrace Client Secret
          secret: true
      required:
        - dynatrace_host
        - dynatrace_client_id
        - dynatrace_client_secret
    injectors:
      env:
        DYNATRACE_HOST: "{% raw %}{{ dynatrace_host }}{% endraw %}"
        DYNATRACE_CLIENT_ID: "{% raw %}{{ dynatrace_client_id }}{% endraw %}"
        DYNATRACE_CLIENT_SECRET: "{% raw %}{{ dynatrace_client_secret }}{% endraw %}"
  - name: EE Utilities
    description: The EE Utilities Credential configuration below is compatible with infra.ee_utilities modules
    inputs:
      fields:
        - id: ee_base_reg_user
          type: string
          label: Base Registry Username
        - id: ee_base_reg_password
          type: string
          label: Base Registry Password
          secret: true
        - id: ee_dest_reg
          type: string
          label: Destination Registry
          help_text: "ex: quay.io/zleblanc"
        - id: ee_dest_reg_user
          type: string
          label: Destination Registry Username
        - id: ee_dest_reg_password
          type: string
          label: Destination Registry Password
    injectors:
      extra_vars:
        ee_dest_reg: "{% raw %}{{ ee_dest_reg }}{% endraw %}"
        ee_base_reg_user: "{% raw %}{{ ee_base_reg_user }}{% endraw %}"
        ee_dest_reg_user: "{% raw %}{{ ee_dest_reg_user }}{% endraw %}"
        ee_base_reg_password: "{% raw %}{{ ee_base_reg_password }}{% endraw %}"
        ee_dest_reg_password: "{% raw %}{{ ee_dest_reg_password }}{% endraw %}"
  - name: HashiCorp Vault Credential
    description: HashiCorp Vault credential for use with community.hashi_vault collection
    inputs:
      fields:
        - id: vault_addr
          type: string
          label: Vault Address
        - id: vault_namespace
          type: string
          label: Vault Namespace
        - id: vault_token
          type: string
          label: Vault Token
          secret: true
        - id: vault_ca_cert
          type: string
          label: Vault CA Certificate
        - id: vault_skip_verify
          type: boolean
          label: Verify SSL
      required:
        - vault_addr
    injectors:
      env:
        VAULT_ADDR: "{% raw %}{{ vault_addr }}{% endraw %}"
        VAULT_NAMESPACE: "{% raw %}{{ vault_namespace }}{% endraw %}"
        VAULT_TOKEN: "{% raw %}{{ vault_token }}{% endraw %}"
        VAULT_CACERT: "{% raw %}{{ vault_ca_cert }}{% endraw %}"
        VAULT_SKIP_VERIFY: "{% raw %}{{ vault_skip_verify }}{% endraw %}"
  - name:  Microsoft AD Admin Credential
    description:  Microsoft AD Admin credential for use with microsoft.ad collection
    inputs:
      fields:
        - id: dns_domain_name
          type: string
          label: DNS Domain Name
          help_text: When state=domain, this is the DNS name of the domain to which the targeted Windows host should be joined.
        - id: domain_admin_user
          type: string
          label: Domain Admin User
          help_text: Username of a domain admin for the target domain (required to join or leave the domain).
        - id: domain_admin_password
          type: string
          label: Domain Admin Password
          secret: true
        - id: local_admin_password
          type: string
          label: Local Admin Password
          help_text: Password to be assigned to the local Administrator user (required when state=member_server).
          secret: true
      required:
        - dns_domain_name
        - domain_admin_user
        - domain_admin_password
    injectors:
      extra_vars:
        dns_domain_name: "{% raw %}{{ dns_domain_name }}{% endraw %}"
        domain_admin_user: "{% raw %}{{ domain_admin_user }}{% endraw %}"
        domain_admin_password: "{% raw %}{{ domain_admin_password }}{% endraw %}"
        domain_username: "{% raw %}{{ domain_admin_user }}{% endraw %}"
        domain_password: "{% raw %}{{ domain_admin_password }}{% endraw %}"
        local_admin_password: "{% raw %}{{ local_admin_password }}{% endraw %}"
  - name:  Microsoft AD LDAP Credential
    description: Microsoft AD LDAP credential for use with microsoft.ad.ldap inventory plugin
    inputs:
      fields:
        - id: ldap_server
          type: string
          label: LDAP Server
          help_text: The domain controller/server to connect to
        - id: ldap_port
          type: string
          label: LDAP Port
          help_text: Port 389 is used for LDAP and port 686 is used for LDAPS
        - id: ldap_username
          type: string
          label: LDAP Username
        - id: ldap_password
          type: string
          label: LDAP Password
          secret: true
        - id: ldap_auth_protocol
          type: string
          label: LDAP Auth Protocol
          choices:
            - simple
            - certificate
            - kerberos
            - negotiate
            - ntlm
        - id: ldap_cert_validation
          type: string
          label: LDAP Cert Validation
          choices:
            - always
            - ignore
            - ignore_hostname
          help_text: The certificate validation behaviour when using a TLS connection
        - id: ldap_ca_cert
          type: string
          label: LDAP CA Cert
          help_text: Can be the path to a CA certificate PEM or DER file, directory of PEM certificates, or the CA certificate PEM string that is used for certificate validation
        - id: ldap_certificate
          type: string
          label: LDAP Certificate
          help_text: The value can either be a path to a file containing the certificate or string of the PEM encoded certificate
        - id: ldap_certificate_key
          type: string
          label: LDAP Certificate Key
          help_text: The value can either be a path to a file containing the key in the PEM or DER encoded form, or it can be the string of a PEM encoded key
        - id: ldap_certificate_password
          type: string
          label: LDAP Certificate Password
          secret: true
          help_text: The password used to decrypt the certificate key specified by LDAP Certificate or LDAP Certificate Key
      required:
        - ldap_server
    injectors:
      env:
        MICROSOFT_AD_LDAP_SERVER: "{% raw %}{{ ldap_server }}{% endraw %}"
        MICROSOFT_AD_LDAP_PORT: "{% raw %}{{ ldap_port | default('389') }}{% endraw %}"
        MICROSOFT_AD_LDAP_USERNAME: "{% raw %}{{ ldap_username }}{% endraw %}"
        MICROSOFT_AD_LDAP_PASSWORD: "{% raw %}{{ ldap_password }}{% endraw %}"
        MICROSOFT_AD_LDAP_AUTH_PROTOCOL: "{% raw %}{{ ldap_auth_protocol | default('negotiate', true) }}{% endraw %}"
        MICROSOFT_AD_LDAP_CERT_VALIDATION: "{% raw %}{{ ldap_cert_validation }}{% endraw %}"
        MICROSOFT_AD_LDAP_CA_CERT: "{% raw %}{{ ldap_ca_cert }}{% endraw %}"
        MICROSOFT_AD_LDAP_CERTIFICATE: "{% raw %}{{ ldap_certificate }}{% endraw %}"
        MICROSOFT_AD_LDAP_CERTIFICATE_KEY: "{% raw %}{{ ldap_certificate_key }}{% endraw %}"
        MICROSOFT_AD_LDAP_CERTIFICATE_PASSWORD: "{% raw %}{{ ldap_certificate_password }}{% endraw %}"
  - name:  Microsoft AD User Credential
    description:  Microsoft AD User credential for use with microsoft.ad collection
    inputs:
      fields:
        - id: domain_user
          type: string
          label: Domain Username
          help_text: |
              The username to use when interacting with AD.
              If this is not set then the user that is used for authentication will be the connection user.
              Ansible will be unable to use the connection user unless auth is Kerberos with credential delegation or CredSSP, or become is used on the task.
        - id: domain_password
          type: string
          label: Domain Password
          secret: true
        - id: domain_server
          type: string
          label: Local Admin Password
          help_text: |
              Specified the Active Directory Domain Services instance to connect to.
              Can be in the form of an FQDN or NetBIOS name.
              If not specified then the value is based on the default domain of the computer running PowerShell.
      required:
        - domain_user
        - domain_password
    injectors:
      extra_vars:
        domain_user: "{% raw %}{{ domain_user }}{% endraw %}"
        domain_password: "{% raw %}{{ domain_password }}{% endraw %}"
        domain_server: "{% raw %}{{ domain_server }}{% endraw %}"
